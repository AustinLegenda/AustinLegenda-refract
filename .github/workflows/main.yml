name: Forecast Job

on:
  schedule:
    - cron: "*/15 * * * *"
  workflow_dispatch:

permissions:
  contents: write   # needed to push JSON updates

jobs:
  run-forecast:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # cfgrib needs the ecCodes C libraries on the runner
      - name: Install ecCodes system libs
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            libeccodes0 libeccodes-dev

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r Forecast/requirements.txt

      # Optional: surface warnings exactly like your local run
      - name: Run forecast
        env:
          PYTHONWARNINGS: "ignore::FutureWarning:cfgrib.xarray_plugin"
        run: |
          python Forecast/src/main.py

      # Copy any JSON produced into the site tree we deploy
      - name: Stage JSON into public_html
        run: |
          mkdir -p public_html/Forecast/data/
          # copy from typical output locations; adjust if yours differs
          if compgen -G "Forecast/data/*.json" > /dev/null; then
            cp Forecast/data/*.json public_html/Forecast/data/ || true
          fi
          if compgen -G "Forecast/data/**/*.json" > /dev/null; then
            find Forecast/data -name "*.json" -maxdepth 2 -type f -print0 | xargs -0 -I{} cp "{}" public_html/Forecast/data/ || true
          fi
          if compgen -G "Forecast/data/wave-forecast/*.json" > /dev/null; then
            cp Forecast/data/wave-forecast/*.json public_html/Forecast/data/ || true
          fi

      - name: Commit & push JSON
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add public_html/Forecast/data/ || true
          git commit -m "Update forecast JSON [skip ci]" || echo "No changes to commit"
          git push

      - name: Trigger Cloudways pull (webhook)
        if: always()
        env:
          CW_DEPLOY_URL: ${{ secrets.CW_DEPLOY_URL }}
        run: |
          if [ -z "$CW_DEPLOY_URL" ]; then
            echo "CW_DEPLOY_URL secret is not set"; exit 1
          fi
          echo "Calling Cloudways webhookâ€¦"
          curl -sS -m 30 "$CW_DEPLOY_URL" -o /tmp/cw.json
          echo "Cloudways response:"
          cat /tmp/cw.json
