name: Forecast Job

on:
  schedule:
    - cron: "*/15 * * * *"
  workflow_dispatch:

concurrency:
  group: forecast-job
  cancel-in-progress: false

permissions:
  contents: write

jobs:
  run-forecast:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          check-latest: true

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('Forecast/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install system libs for cfgrib/ecCodes
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends libeccodes0 libeccodes-dev

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r Forecast/requirements.txt

      - name: Run forecast
        env:
          PYTHONWARNINGS: "ignore::FutureWarning:cfgrib.xarray_plugin"
        run: |
          python Forecast/src/main.py

      # ✅ USE THIS SOURCE PATH EXACTLY
      - name: Stage JSON into public_html
        run: |
          set -euo pipefail
          SRC_DIR="Forecast/src/data/wave-forecast"
          DEST_DIR="public_html/Forecast/src/data/wave-forecast"
          mkdir -p "$DEST_DIR"
          shopt -s nullglob
          for f in "$SRC_DIR"/*.json; do
            echo "Copying $f → $DEST_DIR/"
            cp "$f" "$DEST_DIR/"
          done
          ls -l "$DEST_DIR" || true

      - name: Commit & push JSON
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A public_html/Forecast/src/data/wave-forecast/
          if git diff --cached --quiet; then
            echo "No JSON changes to commit"
          else
            git commit -m "Update forecast JSON [skip ci]"
            git push
          fi

      - name: Trigger Cloudways pull (webhook)
        env:
          CW_DEPLOY_BASE: ${{ secrets.CW_DEPLOY_BASE }}
          CW_SERVER_ID: "1452178"
          CW_APP_ID: "5683884"
          GIT_URL: "git@github.com:AustinLegenda/AustinLegenda-refract.git"
          BRANCH: "main"
        run: |
          set -euo pipefail
          BASE="$(printf %s "$CW_DEPLOY_BASE" | tr -d '\r\n')"
          if [ -z "$BASE" ]; then
            echo "::error::CW_DEPLOY_BASE secret is not set"; exit 1
          fi
          echo "Calling Cloudways webhook…"
          curl -sS -m 60 --get "$BASE" \
            --data-urlencode "server_id=$CW_SERVER_ID" \
            --data-urlencode "app_id=$CW_APP_ID" \
            --data-urlencode "git_url=$GIT_URL" \
            --data-urlencode "branch_name=$BRANCH" \
            -D /tmp/cw.headers -o /tmp/cw.json || {
              echo "::error::Failed to reach Cloudways webhook"; exit 1;
            }
          echo "HTTP status: $(head -n1 /tmp/cw.headers)"
          echo "Cloudways response:"; cat /tmp/cw.json || true

      # Optional: verify exact public URLs
      - name: Verify JSON is live on Cloudways
        run: |
          sleep 5
          for url in \
            "https://phpstack-1452178-5683884.cloudwaysapps.com/Forecast/src/data/wave-forecast/wave_point_41112.json" \
            "https://phpstack-1452178-5683884.cloudwaysapps.com/Forecast/src/data/wave-forecast/wave_point_41117.json"
          do
            code=$(curl -s -o /dev/null -w '%{http_code}' "$url")
            echo "$url → HTTP $code"
            if [ "$code" -ne 200 ]; then
              echo "::warning::Missing or not deployed: $url"
            fi
          done
